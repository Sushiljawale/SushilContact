{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/contact.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction EditContactComponent_option_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", group_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(group_r1.name);\n  }\n}\nexport class EditContactComponent {\n  constructor(activatedRoute, contactservice) {\n    this.activatedRoute = activatedRoute;\n    this.contactservice = contactservice;\n    this.loading = false;\n    this.contactId = null;\n    this.contact = {};\n    this.errorMessage = null;\n    this.groups = [];\n  }\n  ngOnInit() {\n    this.loading = true;\n    this.activatedRoute.paramMap.subscribe(param => {\n      this.contactId = param.get('contactId');\n    });\n    if (this.contactId) {\n      this.contactservice.getContact(this.contactId).subscribe(data => {\n        this.contact = data;\n        this.loading = false;\n      }, error => {\n        this.errorMessage = error;\n        this.loading = false;\n      });\n    }\n  }\n}\nEditContactComponent.ɵfac = function EditContactComponent_Factory(t) {\n  return new (t || EditContactComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ContactService));\n};\nEditContactComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditContactComponent,\n  selectors: [[\"app-edit-contact\"]],\n  decls: 38,\n  vars: 19,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col\"], [1, \"h3\", \"fw-bold\", \"text-danger\"], [1, \"fst-italic\"], [1, \"conatiner\"], [1, \"col-sm-4\"], [1, \"mb-2\"], [\"name\", \"name\", \"required\", \"true\", \"type\", \"text\", \"placeholder\", \"Name\", 1, \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"name\", \"photo\", \"required\", \"true\", \"type\", \"text\", \"placeholder\", \"PhotoUrl\", 1, \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"email\", \"required\", \"true\", \"placeholder\", \"Email\", 1, \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"mobile\", \"required\", \"true\", \"placeholder\", \"Mobile\", 1, \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"company\", \"required\", \"true\", \"placeholder\", \"Company\", 1, \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"title\", \"required\", \"true\", \"placeholder\", \"Title\", 1, \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"name\", \"groupId\", \"required\", \"true\", 1, \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", \"value\", \"Update\", 1, \"btn\", \"btn-danger\"], [\"routerLink\", \"/\", 1, \"btn\", \"btn-dark\", \"ms-2\"], [1, \"col\", \"sm-4\"], [1, \"contact-img\", 3, \"src\"], [3, \"value\"]],\n  template: function EditContactComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"p\", 3);\n      i0.ɵɵtext(4, \"Edit Contact\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"P\", 4);\n      i0.ɵɵtext(6, \" Lorem ipsum dolor, sit amet consectetur adipisicing elit. Animi maiores excepturi, tempore illo quae accusamus repellendus quidem quia sint blanditiis iusto enim nesciunt possimus provident? Minima corporis nihil temporibus tenetur.\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 1)(10, \"div\", 6)(11, \"form\")(12, \"div\", 7)(13, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function EditContactComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.contact.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 7)(15, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function EditContactComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.contact.photo = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 7)(17, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function EditContactComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.contact.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 7)(19, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function EditContactComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.contact.mobile = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 7)(21, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function EditContactComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.contact.company = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 7)(23, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function EditContactComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.contact.title = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 7)(25, \"select\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function EditContactComponent_Template_select_ngModelChange_25_listener($event) {\n        return ctx.contact.groupId = $event;\n      });\n      i0.ɵɵelementStart(26, \"option\", 15);\n      i0.ɵɵtext(27, \"Select Group\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(28, EditContactComponent_option_28_Template, 2, 2, \"option\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 7);\n      i0.ɵɵelement(30, \"input\", 17);\n      i0.ɵɵelementStart(31, \"a\", 18);\n      i0.ɵɵtext(32, \"Close\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(33, \"div\", 19);\n      i0.ɵɵelement(34, \"img\", 20);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(35, \"pre\");\n      i0.ɵɵtext(36);\n      i0.ɵɵpipe(37, \"json\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.contact.name)(\"value\", ctx.contact.name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.contact.photo)(\"value\", ctx.contact.photo);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.contact.email)(\"value\", ctx.contact.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.contact.mobile)(\"value\", ctx.contact.mobile);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.contact.company)(\"value\", ctx.contact.company);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.contact.title)(\"value\", ctx.contact.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.contact.groupId)(\"value\", ctx.contact.groupId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.groups);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"src\", ctx.contact.photo, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(37, 17, ctx.contact.groupId));\n    }\n  },\n  dependencies: [i3.NgForOf, i1.RouterLink, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i3.JsonPipe],\n  styles: [\".conatiner[_ngcontent-%COMP%]{\\r\\n    padding-left: 8.5%;\\r\\n    \\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9lZGl0LWNvbnRhY3QvZWRpdC1jb250YWN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7O0FBRXRCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbmF0aW5lcntcclxuICAgIHBhZGRpbmctbGVmdDogOC41JTtcclxuICAgIFxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAuDoBA,kCAAwD;IAAAA,YAAc;IAAAA,iBAAS;;;;IAAvEA,mCAAkB;IAA8BA,eAAc;IAAdA,mCAAc;;;AC5C1F,OAAM,MAAOC,oBAAoB;EAS/BC,YAAsBC,cAA6B,EACnCC,cAA6B;IADvB,mBAAc,GAAdD,cAAc;IACpB,mBAAc,GAAdC,cAAc;IARvB,YAAO,GAAW,KAAK;IACvB,cAAS,GAAe,IAAI;IAC5B,YAAO,GAAY,EAAc;IACjC,iBAAY,GAAe,IAAI;IAC/B,WAAM,GAAc,EAAc;EAIM;EAE/CC,QAAQ;IACN,IAAI,CAACC,OAAO,GAAC,IAAI;IACjB,IAAI,CAACH,cAAc,CAACI,QAAQ,CAACC,SAAS,CAAEC,KAAc,IAAG;MACxD,IAAI,CAACC,SAAS,GAACD,KAAK,CAACE,GAAG,CAAC,WAAW,CAAC;IACtC,CAAC,CAAC;IACF,IAAG,IAAI,CAACD,SAAS,EAAC;MAChB,IAAI,CAACN,cAAc,CAACQ,UAAU,CAAC,IAAI,CAACF,SAAS,CAAC,CAACF,SAAS,CAAEK,IAAa,IAAG;QACxE,IAAI,CAACC,OAAO,GAACD,IAAI;QACjB,IAAI,CAACP,OAAO,GAAC,KAAK;MACpB,CAAC,EAAES,KAAK,IAAG;QACT,IAAI,CAACC,YAAY,GAACD,KAAK;QACvB,IAAI,CAACT,OAAO,GAAC,KAAK;MACpB,CAAC,CAAC;;EAIN;;AA5BWL,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDXjCrB,8BAAuB;MAGwBA,4BAAY;MAAAA,iBAAI;MACnDA,4BAAuB;MAACA,yPAAwO;MAAAA,iBAAI;MAG1QA,qBAAI;MAGVA,8BAAuB;MAKCA;QAAA;MAAA,EAA0B;MAAlCA,iBAEoD;MAExDA,+BAAkB;MAEdA;QAAA;MAAA,EAA2B;MAD3BA,iBAGwD;MAE5DA,+BAAkB;MAEdA;QAAA;MAAA,EAA2B;MAD3BA,iBAG0C;MAE9CA,+BAAkB;MAEdA;QAAA;MAAA,EAA4B;MAD5BA,iBAG0C;MAE9CA,+BAAkB;MAEdA;QAAA;MAAA,EAA6B;MAD7BA,iBAG2C;MAE/CA,+BAAkB;MAEdA;QAAA;MAAA,EAA2B;MAD3BA,iBAGyC;MAE7CA,+BAAkB;MAEdA;QAAA;MAAA,EAA6B;MAGzBA,mCAAiB;MAAAA,6BAAY;MAAAA,iBAAS;MACtCA,8EAA+E;MACnFA,iBAAS;MAEbA,+BAAkB;MACdA,6BAA2D;MAC3DA,8BAA8C;MAAAA,sBAAK;MAAAA,iBAAI;MAI/DA,gCAAsB;MAClBA,2BAA+C;MACnDA,iBAAM;MAGdA,4BAAK;MAAAA,aAA0B;;MAAAA,iBAAM;;;MAtDbA,gBAA0B;MAA1BA,0CAA0B;MAMlCA,eAA2B;MAA3BA,2CAA2B;MAM3BA,eAA2B;MAA3BA,2CAA2B;MAM3BA,eAA4B;MAA5BA,4CAA4B;MAM5BA,eAA6B;MAA7BA,6CAA6B;MAM7BA,eAA2B;MAA3BA,2CAA2B;MAM3BA,eAA6B;MAA7BA,6CAA6B;MAIoBA,eAAS;MAATA,oCAAS;MAUzDA,eAAqB;MAArBA,yDAAqB;MAIjCA,eAA0B;MAA1BA,iEAA0B","names":["i0","EditContactComponent","constructor","activatedRoute","contactservice","ngOnInit","loading","paramMap","subscribe","param","contactId","get","getContact","data","contact","error","errorMessage","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\New Project\\contact-manager\\src\\app\\components\\edit-contact\\edit-contact.component.html","E:\\New Project\\contact-manager\\src\\app\\components\\edit-contact\\edit-contact.component.ts"],"sourcesContent":["<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <p class=\" h3 fw-bold text-danger\">Edit Contact</p>\n            <P class=\"fst-italic \"> Lorem ipsum dolor, sit amet consectetur adipisicing elit. Animi maiores excepturi, tempore illo quae accusamus repellendus quidem quia sint blanditiis iusto enim nesciunt possimus provident? Minima corporis nihil temporibus tenetur.</P>\n        </div>\n    </div>\n</div><br>\n\n<!-- create contact -->\n<div class=\"conatiner\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <form >\n                <div class=\"mb-2\">\n                <input  [(ngModel)]=\"contact.name\"\n                        [value]=\"contact.name\"  name=\"name\" required=\"true\"\n                class=\"form-control\" type=\"text\" placeholder=\"Name\">\n            </div>\n            <div class=\"mb-2\">\n                <input \n                [(ngModel)]=\"contact.photo\"\n                [value]=\"contact.photo\" name=\"photo\"  required=\"true\" \n                type=\"text\" class=\"form-control\" placeholder=\"PhotoUrl\">\n            </div>\n            <div class=\"mb-2\">\n                <input type=\"text\"\n                [(ngModel)]=\"contact.email\"\n                [value]=\"contact.email\"  name=\"email\" required=\"true\" \n                 class=\"form-control\" placeholder=\"Email\">\n            </div>\n            <div class=\"mb-2\">\n                <input type=\"number\"\n                [(ngModel)]=\"contact.mobile\"\n                [value]=\"contact.mobile\"  name=\"mobile\" required=\"true\"\n                class=\"form-control\" placeholder=\"Mobile\">\n            </div>\n            <div class=\"mb-2\">\n                <input type=\"text\"\n                [(ngModel)]=\"contact.company\"\n                [value]=\"contact.company\"  name=\"company\" required=\"true\"\n                class=\"form-control\" placeholder=\"Company\">\n            </div>\n            <div class=\"mb-2\">\n                <input type=\"text\"\n                [(ngModel)]=\"contact.title\"\n                [value]=\"contact.title\"  name=\"title\" required=\"true\"\n                class=\"form-control\" placeholder=\"Title\">\n            </div>\n            <div class=\"mb-2\">\n                <select\n                [(ngModel)]=\"contact.groupId\"\n                [value]=\"contact.groupId\"  name=\"groupId\" required=\"true\"\n                class=\"form-control\">\n                    <option value=\"\">Select Group</option>\n                    <option [value]=\"group.id\" *ngFor=\"let group of groups\">{{group.name}}</option>\n                </select>\n            </div>\n            <div class=\"mb-2\">\n                <input type=\"submit\" class=\"btn btn-danger\" value=\"Update\">\n                <a  class=\"btn btn-dark ms-2\" routerLink=\"/\" >Close</a>\n            </div>\n            </form>\n        </div>\n        <div class=\"col sm-4\">\n            <img [src]=\"contact.photo\" class=\"contact-img\">\n        </div>\n    </div>\n</div>\n<pre>{{contact.groupId | json}}</pre>\n\n","import { Component, OnInit } from '@angular/core';\nimport {  ActivatedRoute, ParamMap } from '@angular/router';\nimport { Icontact } from 'src/app/model/icontact';\nimport { Igroup } from 'src/app/model/igroup';\nimport { ContactService } from 'src/app/services/contact.service';\n\n@Component({\n  selector: 'app-edit-contact',\n  templateUrl: './edit-contact.component.html',\n  styleUrls: ['./edit-contact.component.css']\n})\nexport class EditContactComponent  implements OnInit{\n\n  public loading : boolean=false;\n  public contactId:string | null=null;\n  public contact: Icontact= {} as Icontact;\n  public errorMessage:string | null=null;\n  public groups : Igroup[] = [] as Igroup[];\n \n\n  constructor ( private activatedRoute:ActivatedRoute , \n          private contactservice:ContactService){}\n\n  ngOnInit(): void {\n    this.loading=true;\n    this.activatedRoute.paramMap.subscribe((param:ParamMap)=>{\n     this.contactId=param.get('contactId');\n    });\n    if(this.contactId){\n      this.contactservice.getContact(this.contactId).subscribe((data:Icontact)=>{\n        this.contact=data;\n        this.loading=false;\n      },(error)=>{\n        this.errorMessage=error;\n        this.loading=false;\n      });\n\n    }\n   \n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}