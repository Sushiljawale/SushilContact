{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ContactService = /*#__PURE__*/(() => {\n  class ContactService {\n    constructor(httpclient) {\n      this.httpclient = httpclient;\n      this.serverurl = `http://localhost:9000`; //json server url\n    }\n    // Get-all Conatacts\n    getAllContacts() {\n      let dataURL = `${this.serverurl}/contacts`;\n      return this.httpclient.get(dataURL).pipe(catchError(this.handleError));\n    }\n    //Get single Contact\n    getContact(conatctId) {\n      let dataURL = `${this.serverurl}/contacts/${conatctId}`;\n      return this.httpclient.get(dataURL).pipe(catchError(this.handleError));\n    }\n    //Create Contact\n    createContact(contact) {\n      let dataURL = `${this.serverurl}/contacts`;\n      return this.httpclient.post(dataURL, contact).pipe(catchError(this.handleError));\n    }\n    // Update Contact\n    updateContact(contactId, conatct) {\n      let dataURL = `${this.serverurl}/contacts/${contactId}`;\n      return this.httpclient.put(dataURL, conatct).pipe(catchError(this.handleError));\n    }\n    //Delete Contact\n    deleteContact(contactId) {\n      let dataURL = `${this.serverurl}/contacts/${contactId}`;\n      return this.httpclient.delete(dataURL).pipe(catchError(this.handleError));\n    }\n    // For serch data \n    searchContacts(query) {\n      let dataURL = `${this.serverurl}/search?q=${query}`;\n      return this.httpclient.get(this.serverurl).pipe(catchError(this.handleError));\n    }\n    // Get-all Groups\n    getAllGroups() {\n      let dataURL = `${this.serverurl}/groups`;\n      return this.httpclient.get(dataURL).pipe(catchError(this.handleError));\n    }\n    //Get single Groups\n    getGroups(contact) {\n      let dataURL = `${this.serverurl}/groups/${contact.groupId}`;\n      return this.httpclient.get(dataURL).pipe(catchError(this.handleError));\n    }\n    // error handaling\n    handleError(error) {\n      let errrorMessage = '';\n      if (error.error instanceof ErrorEvent) {\n        //client Side\n        errrorMessage = 'Error : ${error.error.errrorMessage}';\n      } else {\n        //server side\n        errrorMessage = 'Status : ${error.Status} \\n Message : ${error.Message}';\n      }\n      return throwError(errrorMessage);\n    }\n  }\n  ContactService.ɵfac = function ContactService_Factory(t) {\n    return new (t || ContactService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ContactService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ContactService,\n    factory: ContactService.ɵfac,\n    providedIn: 'root'\n  });\n  return ContactService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}